---
title: "Maximum Likelihood Estimators"
author: "S20426"
date: "2025-03-14"
output:
  pdf_document: default
  html_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}



# Generate synthetic data from an exponential distribution
set.seed(123)
data <- rexp(100, rate = 0.1)

# Likelihood function for the exponential distribution
log_likelihood <- function(lambda) {
  sum(dexp(data, rate = lambda, log = TRUE))
}

# Maximum Likelihood Estimation using optim
result <- optim(par = 0.1, log_likelihood, method = "Brent", lower = 0.001, upper = 10)
mle_lambda <- result$par

# Print the MLE estimate
cat("Maximum Likelihood Estimate for Lambda:", mle_lambda, "\n")


```

```{r}
library(ggplot2)
# Plot the histogram of the data with the estimated lambda
ggplot(data = NULL, aes(x = data)) +
  geom_histogram(bins = 15, fill = "skyblue", color = "black", alpha = 0.7) +
  geom_vline(xintercept = mle_lambda, color = "red", linetype = "dashed") +
  annotate("text", x = mle_lambda + 0.1, y = 10, 
           label = paste("MLE Lambda:", round(mle_lambda, 2)), color = "red") +
  labs(title = "Histogram with Estimated Lambda", x = "Time", y = "Frequency")

```

### Example 01

```{r}




# ?optimize

log_likelihood <- function(p) {
  
  x <- 103
  n <- 200
  
 
  if (p == 0 || p == 1) {
    return(-Inf)  # To avoid log(0) which is undefined
  }
  return(x * log(p) + (n - x) * log(1 - p))
}


result <- optimize(log_likelihood, interval = c(0, 1), maximum = TRUE)


result



```

### Example 02

```{r}

weights <- c(59.001, 38.267, 41.025, 35.555, 46.690, 20.994, 39.407, 52.780, 
             57.495, 52.416, 60.062, 48.149, 40.182, 50.929, 49.472, 49.197, 
             43.459, 40.493, 60.196, 58.590, 53.645, 53.837, 61.134, 62.115, 
             46.517, 41.404, 56.500, 53.281, 44.821, 47.610, 51.178, 58.315, 
             34.411, 47.795, 41.828, 60.767, 60.797, 51.421, 51.570, 48.313, 
             47.310, 58.078, 38.753, 35.692, 50.604, 42.070, 53.403, 47.405, 
             36.952, 53.682)

normal <- function(x,data)(
  
  return (
    sum(dnorm(x,mean(data),sd(data),log = TRUE))
  )
)

result <- optimize(normal,interval = c(-100,+100),data=weights, maximum = TRUE)
result

```

# Confidence Interval for Mean

## Case 1: When data is normal/ large sample and Ïƒ

is known.

```{r}

```
